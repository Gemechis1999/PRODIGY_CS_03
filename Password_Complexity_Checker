import re

def check_password_strength(password):
    # Criteria definitions
    length_criteria = len(password) >= 8
    upper_criteria = re.search(r'[A-Z]', password) is not None
    lower_criteria = re.search(r'[a-z]', password) is not None
    number_criteria = re.search(r'[0-9]', password) is not None
    special_criteria = re.search(r'[\W_]', password) is not None
    
    # Count the number of criteria met
    criteria_met = sum([length_criteria, upper_criteria, lower_criteria, number_criteria, special_criteria])
    
    # Provide feedback based on the number of criteria met
    if criteria_met == 5:
        return "Strong"
    elif criteria_met == 4:
        return "Moderate"
    elif criteria_met == 3:
        return "Weak"
    else:
        return "Very Weak"

def provide_feedback(password):
    feedback = []
    
    if len(password) < 8:
        feedback.append("Password should be at least 8 characters long.")
    if not re.search(r'[A-Z]', password):
        feedback.append("Password should include at least one uppercase letter.")
    if not re.search(r'[a-z]', password):
        feedback.append("Password should include at least one lowercase letter.")
    if not re.search(r'[0-9]', password):
        feedback.append("Password should include at least one number.")
    if not re.search(r'[\W_]', password):
        feedback.append("Password should include at least one special character.")
    
    return feedback

# Example Usage
password = input("Enter a password to check its strength: ")

strength = check_password_strength(password)
feedback = provide_feedback(password)

print(f"Password Strength: {strength}")
if feedback:
    print("Feedback:")
    for f in feedback:
        print(f"- {f}")
